// test/auth.routes.test.js

import request from 'supertest'; // Sert √† envoyer des requ√™tes HTTP √† Express
import { describe, it, expect } from 'vitest'; // Vitest pour structure de test
import app from '../app.js'; // Ton app Express qui utilise le routeur auth

//suite de tests
describe('Tests des routes Auth', () => {
  // üîê Test de la route POST /auth/register
  it('POST /auth/register - doit enregistrer un utilisateur', async () => {
    // On envoie une requ√™te POST avec un corps JSON
    const res = await request(app)
      .post('/auth/register') // route cibl√©e
      .send({ username: 'alice', password: 'secret' }); // donn√©es d'entr√©e

    // On v√©rifie que le code HTTP est bien 201 (cr√©ation)
    expect(res.statusCode).toBe(201);

    // On v√©rifie le contenu de la r√©ponse (d√©pend de ton contr√¥leur)
    expect(res.body).toEqual({ message: 'Registered' }); // adaptables √† ta r√©ponse r√©elle
  });

  // üîë Test de la route POST /auth/login
  it('POST /auth/login - doit renvoyer un token', async () => {
    const res = await request(app)
      .post('/auth/login')
      .send({ username: 'alice', password: 'secret' });

    expect(res.statusCode).toBe(200);

    // V√©rifie que la r√©ponse contient un token
    expect(res.body.token).toBeDefined();
  });

  // üîÅ Test de la route POST /auth/refresh
  it('POST /auth/refresh - doit renvoyer un nouveau token', async () => {
    const res = await request(app)
      .post('/auth/refresh')
      .send({ token: 'ancien-token' }); // exemple de token expir√© ou utilis√©

    expect(res.statusCode).toBe(200);
    expect(res.body.token).toBeDefined(); // V√©rifie qu'on re√ßoit bien un "nouveau" token
  });

  // üö™ Test de la route POST /auth/logout
  it('POST /auth/logout - doit confirmer la d√©connexion', async () => {
    const res = await request(app)
      .post('/auth/logout'); // pas besoin de payload ici dans cet exemple

    expect(res.statusCode).toBe(200);
    expect(res.body.message).toBe('Logged out'); // message que le contr√¥leur est cens√© renvoyer
  });
});
